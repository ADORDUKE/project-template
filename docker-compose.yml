version: '3.4'

services:

  # api:
  #   image: nginx:latest
  #   volumes:
  #     - ./docker-compose.nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - front
  #     # - back 
  #   ports:
  #     - "8050:8050"

  # async:
  #   image: centrifugo/centrifugo:v2.8

  # front:
  #   build: 
  #     context: ./front  # where we should find dockerfile
  #     target : dev
  #   volumes:
  #     - ./front:/app
  #   ports:
  #     - 3000:3000
  #   stdin_open: true # docker run -i
  #   tty: true        # docker run -t
  #   entrypoint: ["sh", "-c", "npm install && npm run start"]
  #   # entrypoint: ["sh", "-c", "pm install && npm audit fix && npm run start"]
  #   # entrypoint: ["sh", "-c", "npm run start"]
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

  auth:
    build:
      context: ./back
      target: dev
    depends_on:
      - db 
    volumes:
      - ./back:/app
    ports:
      - 8000:8000
    entrypoint: ["sh", "-c", "pip install -r requirements.txt && python manage.py runserver 0.0.0.0:8000"]

  db:
    # image: postgres:12.0-alpine
    image: eu.gcr.io/your-project/postgres-multi-db
    environment:
      - POSTGRES_USER=project-template
      - POSTGRES_PASSWORD=123456
      # - POSTGRES_DB=project-template
      - POSTGRES_MULTIPLE_DATABASES=auth
